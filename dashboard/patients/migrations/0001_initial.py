# Generated by Django 3.0.10 on 2021-02-12 08:12

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=240)),
                ('last_name', models.CharField(max_length=240)),
                ('admission_date', models.DateTimeField()),
                ('dismissal_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['admission_date'],
                'get_latest_by': 'admission_date',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daytime', models.CharField(choices=[('D', 'D'), ('E', 'E'), ('N', 'N')], default='D', max_length=1)),
                ('datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('day_of_fever', models.PositiveIntegerField(blank=True, null=True)),
                ('fever', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('pulse', models.PositiveIntegerField(blank=True, null=True)),
                ('respiration', models.IntegerField(blank=True, null=True)),
                ('bp_sys', models.PositiveIntegerField(blank=True, null=True)),
                ('bp_dia', models.PositiveIntegerField(blank=True, null=True)),
                ('fluid_input', models.PositiveIntegerField(blank=True, null=True)),
                ('fi_oral', models.PositiveIntegerField(blank=True, null=True, verbose_name='oral')),
                ('fi_parenteral', models.PositiveIntegerField(blank=True, null=True, verbose_name='parenteral')),
                ('fi_other', models.PositiveIntegerField(blank=True, null=True, verbose_name='other')),
                ('fi_eight_hrs', models.PositiveIntegerField(blank=True, null=True, verbose_name='in 8 hours')),
                ('fi_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('fluid_output', models.PositiveIntegerField(blank=True, null=True)),
                ('fo_urine', models.PositiveIntegerField(blank=True, null=True, verbose_name='urine')),
                ('fo_uf', models.PositiveIntegerField(blank=True, null=True, verbose_name='uf')),
                ('fo_emesis', models.PositiveIntegerField(blank=True, null=True, verbose_name='emesis')),
                ('fo_drainage', models.PositiveIntegerField(blank=True, null=True, verbose_name='drainage')),
                ('fo_eight_hrs', models.PositiveIntegerField(blank=True, null=True, verbose_name='in 8 hours')),
                ('fo_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('diet', models.CharField(blank=True, max_length=1000, null=True)),
                ('pain_score', models.PositiveIntegerField(blank=True, null=True)),
                ('abd_cir', models.PositiveIntegerField(blank=True, null=True)),
                ('stools', models.PositiveIntegerField(blank=True, null=True)),
                ('urine', models.PositiveIntegerField(blank=True, null=True)),
                ('weight_ht', models.PositiveIntegerField(blank=True, null=True, verbose_name='weight/ht')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='height')),
                ('o2sat', models.PositiveIntegerField(blank=True, null=True, verbose_name='O2 Saturation')),
                ('hematocrit', models.PositiveIntegerField(blank=True, null=True)),
                ('platelet', models.PositiveIntegerField(blank=True, null=True)),
                ('wbc', models.PositiveIntegerField(blank=True, null=True)),
                ('warning_signs', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Warning Signs')),
                ('additional', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Additional Info')),
                ('medical_advice', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Medical Advice')),
                ('status', models.CharField(blank=True, choices=[('ok', 'ok'), ('critical', 'critical'), ('getting better', 'getting better'), ('getting worse', 'getting worse')], max_length=20, null=True)),
                ('status_changed_to_critical', model_utils.fields.MonitorField(default=django.utils.timezone.now, editable=False, monitor='status', when={'critical'})),
                ('monitoring_interval', models.SmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='patients.Patient')),
            ],
            options={
                'ordering': ['datetime'],
                'get_latest_by': 'datetime',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReport',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('daytime', models.CharField(choices=[('D', 'D'), ('E', 'E'), ('N', 'N')], default='D', max_length=1)),
                ('datetime', models.DateTimeField(blank=True, default=datetime.datetime.now, null=True)),
                ('day_of_fever', models.PositiveIntegerField(blank=True, null=True)),
                ('fever', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('pulse', models.PositiveIntegerField(blank=True, null=True)),
                ('respiration', models.IntegerField(blank=True, null=True)),
                ('bp_sys', models.PositiveIntegerField(blank=True, null=True)),
                ('bp_dia', models.PositiveIntegerField(blank=True, null=True)),
                ('fluid_input', models.PositiveIntegerField(blank=True, null=True)),
                ('fi_oral', models.PositiveIntegerField(blank=True, null=True, verbose_name='oral')),
                ('fi_parenteral', models.PositiveIntegerField(blank=True, null=True, verbose_name='parenteral')),
                ('fi_other', models.PositiveIntegerField(blank=True, null=True, verbose_name='other')),
                ('fi_eight_hrs', models.PositiveIntegerField(blank=True, null=True, verbose_name='in 8 hours')),
                ('fi_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('fluid_output', models.PositiveIntegerField(blank=True, null=True)),
                ('fo_urine', models.PositiveIntegerField(blank=True, null=True, verbose_name='urine')),
                ('fo_uf', models.PositiveIntegerField(blank=True, null=True, verbose_name='uf')),
                ('fo_emesis', models.PositiveIntegerField(blank=True, null=True, verbose_name='emesis')),
                ('fo_drainage', models.PositiveIntegerField(blank=True, null=True, verbose_name='drainage')),
                ('fo_eight_hrs', models.PositiveIntegerField(blank=True, null=True, verbose_name='in 8 hours')),
                ('fo_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('diet', models.CharField(blank=True, max_length=1000, null=True)),
                ('pain_score', models.PositiveIntegerField(blank=True, null=True)),
                ('abd_cir', models.PositiveIntegerField(blank=True, null=True)),
                ('stools', models.PositiveIntegerField(blank=True, null=True)),
                ('urine', models.PositiveIntegerField(blank=True, null=True)),
                ('weight_ht', models.PositiveIntegerField(blank=True, null=True, verbose_name='weight/ht')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='height')),
                ('o2sat', models.PositiveIntegerField(blank=True, null=True, verbose_name='O2 Saturation')),
                ('hematocrit', models.PositiveIntegerField(blank=True, null=True)),
                ('platelet', models.PositiveIntegerField(blank=True, null=True)),
                ('wbc', models.PositiveIntegerField(blank=True, null=True)),
                ('warning_signs', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Warning Signs')),
                ('additional', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Additional Info')),
                ('medical_advice', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Medical Advice')),
                ('status', models.CharField(blank=True, choices=[('ok', 'ok'), ('critical', 'critical'), ('getting better', 'getting better'), ('getting worse', 'getting worse')], max_length=20, null=True)),
                ('status_changed_to_critical', model_utils.fields.MonitorField(default=django.utils.timezone.now, editable=False, monitor='status', when={'critical'})),
                ('monitoring_interval', models.SmallIntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_relation', models.ForeignKey(db_constraint=False, on_delete=django.db.models.deletion.DO_NOTHING, related_name='logs', to='patients.Report')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='patients.Patient')),
            ],
            options={
                'verbose_name': 'historical report',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
